SELECT STORE_NAME FROM STORE_INFORMATION;

SELECT STORE_ID ,STORE_NAME, SALES FROM STORE_INFORMATION;

SELECT  STORE_NAME, STORE_ID, SALES FROM STORE_INFORMATION;

SELECT  * FROM STORE_INFORMATION;

-- 表格內的不同資料值
-- 1.以多欄位整列資料為去重覆的依據
-- 2.DISTINC只能下一次，且必須在所有欄位的最前面
SELECT DISTINCT STORE_NAME FROM STORE_INFORMATION;

SELECT  DISTINCT STORE_ID,  STORE_NAME FROM STORE_INFORMATION;


SELECT STORE_ID, STORE_NAME, SALES 
FROM STORE_INFORMATION
WHERE SALES >= 1500;

-- AND(且)嚴謹
-- OR(或)寬鬆
SELECT STORE_ID, STORE_NAME, SALES 
FROM STORE_INFORMATION
WHERE SALES > 1000
OR SALES > 275 AND SALES;


SELECT * 
FROM STORE_INFORMATION
WHERE STORE_ID IN (1,2,3);

-- 字串類型的欄位值必須使用'單引號'
SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME IN ('Los Angeles', 'Boston');


SELECT * 
FROM STORE_INFORMATION
WHERE SALES >= 700 AND SALES <= 2500;

SELECT * 
FROM STORE_INFORMATION
WHERE SALES BETWEEN 700 AND 2500;

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_DATE BETWEEN '2018-03-01' AND '2018-05-30';

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'B%';

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%s';

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%a%';

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'L%s';

-- SQL 練習題(一)
-- 1.「且」找出屬於西區的商店
-- 2.「且」營業額大於300(包含300)
-- 3.「且」商店名稱'L'開頭
-- 4.「或」營業日介於2018年3月至4月
SELECT * 
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID = 2
AND SALES >= 300
AND STORE_NAME LIKE 'L%'
OR STORE_DATE BETWEEN '2018-03-01' AND '2018-04-30';

-- 小往大 (ascending) 預設
-- 由大往小(descending)
SELECT * 
FROM STORE_INFORMATION
ORDER BY SALES DESC, STORE_DATE DESC;

SELECT SUM(SALES), COUNT(STORE_ID), AVG(SALES),
	MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION;

SELECT COUNT(STORE_ID) 
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NULL;

SELECT COUNT(STORE_ID)
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NOT NULL;

-- 計算去重覆的資料個數
SELECT COUNT(DISTINCT STORE_NAME)
FROM STORE_INFORMATION;

SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID), AVG(SALES),
	MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 群組資料清單化(列表)
SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID),
	GROUP_CONCAT(SALES ORDER BY SALES DESC SEPARATOR '/')
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- SELECT -> FROM  -> WHERE -> GROUP BY -> HAVING -> ORDER BY
SELECT STORE_NAME, SUM(SALES)
FROM STORE_INFORMATION
WHERE SALES > 0
GROUP BY STORE_NAME
HAVING SUM(SALES) >= 3000
ORDER BY SUM(SALES) ASC;

-- alias (別名) 
-- 欄位別名及表格別名
-- 1.欄位別名 AS 可以省略
-- 2.欄位別名 單引號可以省略(PS:不能有空白)
-- 2.欄位別名 可使用雙引號(習慣用)
SELECT STORE_NAME '商店名稱', SUM(SALES) "SUM SALE", COUNT(STORE_ID) 'COUNT_STORE',
	GROUP_CONCAT(SALES ORDER BY SALES DESC SEPARATOR '/') AS 'SALES_LIST'
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 表格別名不須加單引號、雙引號
-- "表格別名"."欄位1" "欄位別名" 
SELECT S.STORE_ID, S.STORE_NAME '商店名稱', S.SALES
FROM STORE_INFORMATION S;

-- SQL 練習題(二)
-- 計算和統計「個別商店」的以下三項資料：
-- 「總合營業額」、「商店資料個數」、「平均營業額」
-- 搜尋或排除條件如下：
-- 排除「平均營業額」1000(含)以下的商店資料
-- 排除「商店資料個數」1(含)個以下的商店資料
-- 依照「平均營業額」由大至小排序
-- PS:使用別名語法簡化「表格名稱」及查詢結果「欄位名稱」
SELECT STORE_NAME, SUM(SALES) 'SUM_SALES', COUNT(STORE_ID) 'COUNT_STORE', AVG(SALES) 'AVG_SALES'
FROM STORE_INFORMATION
GROUP BY STORE_NAME
HAVING AVG(SALES) > 1000 AND COUNT(STORE_ID) > 1
ORDER BY 'AVG_SALES' DESC;
