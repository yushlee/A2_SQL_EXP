SELECT STORE_ID,STORE_NAME FROM store_information;

SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID FROM store_information;

SELECT * FROM store_information;

SELECT DISTINCT STORE_NAME FROM store_information;

-- 1. DISTINCT 指令只能下一次
-- 2. DISTINCT 只能下在欄位的最前面
SELECT DISTINCT STORE_ID, STORE_NAME FROM store_information;

SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE SALES >= 1500;

-- AND(嚴謹)條件愈多資料愈少
-- OR(寬鬆)條件愈多資料愈多
SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE GEOGRAPHY_ID = 2  AND SALES > 1000;


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE GEOGRAPHY_ID = 2 OR GEOGRAPHY_ID = 1;


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE STORE_ID = 1
OR STORE_ID = 2
OR STORE_ID = 3;

SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE STORE_ID IN (1,2,3,5);


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE STORE_NAME IN ('Boston', 'Los Angeles');

SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE SALES >= 300 AND SALES <= 2500;

SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE SALES BETWEEN 300 AND 3000;


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE STORE_DATE BETWEEN '2018/02/01' AND '2018/05/31';


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE STORE_NAME LIKE 'B%';

SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE STORE_NAME LIKE 'L%s';

-- SQL 練習題(一)
-- 1.「且」找出屬於西區的商店
-- 2.「且」營業額大於300(包含300)
-- 3.「且」商店名稱'L'開頭
-- 4.「或」營業日介於2018年3月至4月
SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
WHERE GEOGRAPHY_ID = 2
AND SALES >= 300
AND STORE_NAME LIKE 'L%'
OR STORE_DATE BETWEEN '2018/03/01' AND '2018/04/30';


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, DATE_FORMAT(STORE_DATE, '%Y-%m') 
FROM store_information
WHERE DATE_FORMAT(STORE_DATE, '%Y-%m') 
BETWEEN '2018-02' AND '2018-06';

-- 小往大 (ascending) 預設
-- 由大往小(descending)
SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
ORDER BY SALES ASC;


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
ORDER BY SALES DESC;


SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
ORDER BY SALES DESC, STORE_DATE DESC;


SELECT SUM(SALES), COUNT(STORE_ID), AVG(SALES), MAX(SALES), MIN(SALES)
FROM store_information;


-- NULL(空值)
SELECT COUNT(STORE_ID)
FROM store_information
WHERE GEOGRAPHY_ID IS NULL;


SELECT COUNT(STORE_ID)
FROM store_information
WHERE GEOGRAPHY_ID IS NOT NULL;


-- COUNT 和 DISTINCT 經常被合起來使用，目的是找出表格中有多少筆不同的資料 
SELECT COUNT(DISTINCT STORE_NAME)
FROM store_information;



SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID 
FROM store_information
ORDER BY STORE_NAME;


SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID), AVG(SALES)
FROM store_information
GROUP BY STORE_NAME;


-- 對群組後的函數產生的值,來設定條件查尋
SELECT STORE_NAME, SUM(SALES)
FROM store_information
GROUP BY STORE_NAME
HAVING SUM(SALES) >= 3000;
